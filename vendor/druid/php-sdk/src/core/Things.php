<?php

namespace Genetsis\core;

/**
 * This class stores data from user's session generated by DruID.
 *
 * @package   Genetsis
 * @category  Bean
 * @version   1.0
 * @access    private
 */
class Things
{
    /** @var {@link ClientToken} Object who stores the "client_token" data. */
    private $client_token = null;
    /** @var {@link AccessToken} Object who stores the "access_token" data. */
    private $access_token = null;
    /** @var {@link LoginStatus} Object who stores the user's login status. */
    private $login_status = null;
    /** @var {@link RefreshToken} Object who stores the user's refresh token. */
    private $refresh_token = null;

    public function __construct()
    {
        if (isset($_SESSION['Things'])) {
            $myThings = unserialize($_SESSION['Things']);

            $this->setClientToken($myThings->getClientToken());
            $this->setAccessToken($myThings->getAccessToken());
            $this->setRefreshToken($myThings->getRefreshToken());
            $this->setLoginStatus($myThings->getLoginStatus());

        }
    }

    /**
     * Returns the stored "client_token".
     *
     * @return ClientToken An instance of {@link ClientToken} or NULL if not set.
     */
    public function getClientToken()
    {
        return $this->client_token;
    }

    /**
     * Sets the "client_token".
     *
     * @param ClientToken An instance of {@link ClientToken} or NULL to remove it.
     */
    public function setClientToken($clientToken)
    {
        $this->client_token = $clientToken;
    }

    /**
     * Returns the "access_token".
     *
     * @return AccessToken An instance of {@link AccessToken} or NULL if not set.
     */
    public function getAccessToken()
    {
        return $this->access_token;
    }

    /**
     * Sets the "access_token".
     *
     * @param AccessToken An instance of {@link AccessToken} or NULL to remove it.
     */
    public function setAccessToken($userToken)
    {
        $this->access_token = $userToken;
    }

    /**
     * Returns the login status object.
     *
     * @return mixed|LoginStatus An instance of {@link LoginStatus} or NULL if not set.
     */
    public function getLoginStatus()
    {
        return $this->login_status;
    }

    /**
     * Sets the user's login status.
     *
     * @param mixed A instance of {@link LoginStatus} or NULL to remove it.
     */
    public function setLoginStatus($loginStatus)
    {
        $this->login_status = $loginStatus;
    }

    /**
     * Returns the "refresh_token".
     *
     * @return mixed An instance of {@link RefreshToken} or NULL if not set.
     */
    public function getRefreshToken()
    {
        return $this->refresh_token;
    }

    /**
     * Sets the "refresh_token".
     *
     * @param mixed An instance of {@link RefreshToken} or NULL to remove it.
     */
    public function setRefreshToken($refreshToken)
    {
        $this->refresh_token = $refreshToken;
    }
}